package kawa.lib;

import android.support.p000v4.app.FragmentTransaction;
import gnu.expr.Language;
import gnu.expr.ModuleBody;
import gnu.expr.ModuleInfo;
import gnu.expr.ModuleMethod;
import gnu.expr.QuoteExp;
import gnu.expr.Symbols;
import gnu.kawa.functions.AddOp;
import gnu.kawa.lispexpr.LispLanguage;
import gnu.kawa.reflect.StaticFieldLocation;
import gnu.lists.Consumer;
import gnu.lists.LList;
import gnu.lists.Pair;
import gnu.lists.PairWithPosition;
import gnu.mapping.CallContext;
import gnu.mapping.Location;
import gnu.mapping.Procedure;
import gnu.mapping.SimpleSymbol;
import gnu.mapping.Symbol;
import gnu.mapping.Values;
import gnu.mapping.WrongType;
import gnu.math.IntNum;
import kawa.lang.Eval;
import kawa.lang.Macro;
import kawa.lang.Quote;
import kawa.lang.SyntaxForm;
import kawa.lang.SyntaxForms;
import kawa.lang.SyntaxPattern;
import kawa.lang.SyntaxRule;
import kawa.lang.SyntaxRules;
import kawa.lang.SyntaxTemplate;
import kawa.lang.TemplateScope;
import kawa.lang.Translator;
import kawa.standard.Scheme;
import kawa.standard.syntax_case;

/* compiled from: std_syntax.scm */
public class std_syntax extends ModuleBody {
    public static final Macro $Prvt$$Pccase = Macro.make(Lit6, Lit7, $instance);
    public static final Macro $Prvt$$Pccase$Mnmatch = Macro.make(Lit8, Lit9, $instance);
    public static final Macro $Prvt$$Pcdo$Mninit = Macro.make(Lit34, Lit35, $instance);
    public static final Macro $Prvt$$Pcdo$Mnlambda1 = Macro.make(Lit36, Lit37, $instance);
    public static final Macro $Prvt$$Pcdo$Mnlambda2 = Macro.make(Lit38, Lit39, $instance);
    public static final Macro $Prvt$$Pcdo$Mnstep = Macro.make(Lit32, Lit33, $instance);
    public static final Macro $Prvt$$Pclet$Mninit = Macro.make(Lit26, Lit27, $instance);
    public static final Macro $Prvt$$Pclet$Mnlambda1 = Macro.make(Lit22, Lit23, $instance);
    public static final Macro $Prvt$$Pclet$Mnlambda2 = Macro.make(Lit24, Lit25, $instance);
    public static final Location $Prvt$define = StaticFieldLocation.make("kawa.lib.prim_syntax", "define");
    public static final Location $Prvt$define$Mnconstant = StaticFieldLocation.make("kawa.lib.prim_syntax", "define$Mnconstant");
    public static final Location $Prvt$if = StaticFieldLocation.make("kawa.lib.prim_syntax", "if");
    public static final Location $Prvt$letrec = StaticFieldLocation.make("kawa.lib.prim_syntax", "letrec");
    public static final std_syntax $instance;
    static final IntNum Lit0 = IntNum.make(0);
    static final IntNum Lit1 = IntNum.make(1);
    static final SimpleSymbol Lit10;
    static final SyntaxPattern Lit11;
    static final SyntaxPattern Lit12;
    static final SyntaxTemplate Lit13;
    static final SyntaxPattern Lit14;
    static final SyntaxTemplate Lit15;
    static final SimpleSymbol Lit16;
    static final SyntaxPattern Lit17;
    static final SyntaxPattern Lit18;
    static final SyntaxTemplate Lit19;
    static final SimpleSymbol Lit2;
    static final SyntaxPattern Lit20;
    static final SyntaxTemplate Lit21;
    static final SimpleSymbol Lit22;
    static final SyntaxRules Lit23;
    static final SimpleSymbol Lit24;
    static final SyntaxRules Lit25;
    static final SimpleSymbol Lit26;
    static final SyntaxRules Lit27;
    static final SimpleSymbol Lit28;
    static final SyntaxRules Lit29;
    static final SyntaxRules Lit3;
    static final SimpleSymbol Lit30;
    static final SyntaxRules Lit31;
    static final SimpleSymbol Lit32;
    static final SyntaxRules Lit33;
    static final SimpleSymbol Lit34;
    static final SyntaxRules Lit35;
    static final SimpleSymbol Lit36;
    static final SyntaxRules Lit37;
    static final SimpleSymbol Lit38;
    static final SyntaxRules Lit39;
    static final SimpleSymbol Lit4;
    static final SimpleSymbol Lit40;
    static final SyntaxRules Lit41;
    static final SimpleSymbol Lit42;
    static final SyntaxRules Lit43;
    static final SimpleSymbol Lit44;
    static final SyntaxRules Lit45;
    static final SimpleSymbol Lit46;
    static final SimpleSymbol Lit47;
    static final SimpleSymbol Lit48;
    static final SimpleSymbol Lit49;
    static final SyntaxRules Lit5;
    static final SimpleSymbol Lit50;
    static final SimpleSymbol Lit51;
    static final SimpleSymbol Lit52;
    static final SimpleSymbol Lit53;
    static final SimpleSymbol Lit54;
    static final SyntaxPattern Lit55;
    static final SimpleSymbol Lit56;
    static final SyntaxTemplate Lit57;
    static final SyntaxTemplate Lit58;
    static final SimpleSymbol Lit59;
    static final SimpleSymbol Lit6;
    static final SyntaxRules Lit60;
    static final SimpleSymbol Lit61;
    static final SyntaxRules Lit62;
    static final SimpleSymbol Lit63;
    static final SimpleSymbol Lit64;
    static final SimpleSymbol Lit65;
    static final SimpleSymbol Lit66;
    static final SimpleSymbol Lit67;
    static final SimpleSymbol Lit68;
    static final SimpleSymbol Lit69;
    static final SyntaxRules Lit7;
    static final SimpleSymbol Lit70;
    static final SimpleSymbol Lit71;
    static final SimpleSymbol Lit72;
    static final SimpleSymbol Lit73;
    static final SimpleSymbol Lit74;
    static final SimpleSymbol Lit75;
    static final SimpleSymbol Lit76;
    static final SimpleSymbol Lit77;
    static final SimpleSymbol Lit8;
    static final SyntaxRules Lit9;
    public static final Macro and;
    public static final Macro begin$Mnfor$Mnsyntax;

    /* renamed from: case  reason: not valid java name */
    public static final Macro f610case = Macro.make(Lit4, Lit5, $instance);
    public static final Macro cond = Macro.make(Lit2, Lit3, $instance);
    public static final ModuleMethod datum$Mn$Grsyntax$Mnobject;
    public static final Macro define$Mnfor$Mnsyntax = Macro.make(Lit59, Lit60, $instance);
    public static final Macro define$Mnprocedure = Macro.make(Lit44, Lit45, $instance);
    public static final Macro delay = Macro.make(Lit42, Lit43, $instance);

    /* renamed from: do */
    public static final Macro f272do = Macro.make(Lit40, Lit41, $instance);
    public static final ModuleMethod free$Mnidentifier$Eq$Qu;
    public static final ModuleMethod generate$Mntemporaries;
    public static final ModuleMethod identifier$Qu;
    public static final Macro let = Macro.make(Lit28, Lit29, $instance);
    public static final Macro let$St = Macro.make(Lit30, Lit31, $instance);

    /* renamed from: or */
    public static final Macro f273or;
    public static final ModuleMethod syntax$Mncolumn;
    public static final ModuleMethod syntax$Mnline;
    public static final ModuleMethod syntax$Mnobject$Mn$Grdatum;
    public static final ModuleMethod syntax$Mnsource;
    public static final Macro with$Mnsyntax = Macro.make(Lit61, Lit62, $instance);

    static {
        SimpleSymbol simpleSymbol;
        SimpleSymbol simpleSymbol2;
        SimpleSymbol simpleSymbol3;
        SimpleSymbol simpleSymbol4;
        SimpleSymbol simpleSymbol5;
        SimpleSymbol simpleSymbol6;
        SimpleSymbol simpleSymbol7;
        SimpleSymbol simpleSymbol8;
        SimpleSymbol simpleSymbol9;
        SimpleSymbol simpleSymbol10;
        SimpleSymbol simpleSymbol11;
        SimpleSymbol simpleSymbol12;
        SimpleSymbol simpleSymbol13;
        SimpleSymbol simpleSymbol14;
        SimpleSymbol simpleSymbol15;
        SyntaxRules syntaxRules;
        SimpleSymbol simpleSymbol16;
        SyntaxRule syntaxRule;
        SyntaxPattern syntaxPattern;
        SimpleSymbol simpleSymbol17;
        SyntaxRule syntaxRule2;
        SyntaxPattern syntaxPattern2;
        SyntaxRule syntaxRule3;
        SyntaxPattern syntaxPattern3;
        SimpleSymbol simpleSymbol18;
        SyntaxRules syntaxRules2;
        SimpleSymbol simpleSymbol19;
        SyntaxRule syntaxRule4;
        SyntaxPattern syntaxPattern4;
        SimpleSymbol simpleSymbol20;
        SimpleSymbol simpleSymbol21;
        SyntaxTemplate syntaxTemplate;
        SyntaxTemplate syntaxTemplate2;
        SyntaxPattern syntaxPattern5;
        SimpleSymbol simpleSymbol22;
        SimpleSymbol simpleSymbol23;
        SimpleSymbol simpleSymbol24;
        SimpleSymbol simpleSymbol25;
        SimpleSymbol simpleSymbol26;
        SimpleSymbol simpleSymbol27;
        SimpleSymbol simpleSymbol28;
        SimpleSymbol simpleSymbol29;
        SyntaxRules syntaxRules3;
        SimpleSymbol simpleSymbol30;
        SyntaxRule syntaxRule5;
        SyntaxPattern syntaxPattern6;
        SimpleSymbol simpleSymbol31;
        SimpleSymbol simpleSymbol32;
        SimpleSymbol simpleSymbol33;
        SimpleSymbol simpleSymbol34;
        SyntaxRules syntaxRules4;
        SimpleSymbol simpleSymbol35;
        SyntaxRule syntaxRule6;
        SyntaxPattern syntaxPattern7;
        SimpleSymbol simpleSymbol36;
        SyntaxRules syntaxRules5;
        SimpleSymbol simpleSymbol37;
        SyntaxRule syntaxRule7;
        SyntaxPattern syntaxPattern8;
        SimpleSymbol simpleSymbol38;
        SimpleSymbol simpleSymbol39;
        SimpleSymbol simpleSymbol40;
        SimpleSymbol simpleSymbol41;
        SimpleSymbol simpleSymbol42;
        SyntaxRules syntaxRules6;
        SimpleSymbol simpleSymbol43;
        SyntaxRule syntaxRule8;
        SyntaxPattern syntaxPattern9;
        SyntaxRule syntaxRule9;
        SyntaxPattern syntaxPattern10;
        SyntaxRules syntaxRules7;
        SyntaxRule syntaxRule10;
        SyntaxPattern syntaxPattern11;
        SyntaxRule syntaxRule11;
        SyntaxPattern syntaxPattern12;
        SyntaxRule syntaxRule12;
        SyntaxPattern syntaxPattern13;
        SyntaxRule syntaxRule13;
        SyntaxPattern syntaxPattern14;
        SyntaxRule syntaxRule14;
        SyntaxPattern syntaxPattern15;
        SyntaxRules syntaxRules8;
        SyntaxRule syntaxRule15;
        SyntaxPattern syntaxPattern16;
        SyntaxRule syntaxRule16;
        SyntaxPattern syntaxPattern17;
        SyntaxRule syntaxRule17;
        SyntaxPattern syntaxPattern18;
        SyntaxRule syntaxRule18;
        SyntaxPattern syntaxPattern19;
        SyntaxRule syntaxRule19;
        SyntaxPattern syntaxPattern20;
        SyntaxRule syntaxRule20;
        SyntaxPattern syntaxPattern21;
        SyntaxRule syntaxRule21;
        SyntaxPattern syntaxPattern22;
        SyntaxRules syntaxRules9;
        SyntaxRule syntaxRule22;
        SyntaxPattern syntaxPattern23;
        SyntaxRule syntaxRule23;
        SyntaxPattern syntaxPattern24;
        SyntaxRule syntaxRule24;
        SyntaxPattern syntaxPattern25;
        SyntaxRule syntaxRule25;
        SyntaxPattern syntaxPattern26;
        SyntaxRules syntaxRules10;
        SimpleSymbol simpleSymbol44;
        SyntaxRule syntaxRule26;
        SyntaxPattern syntaxPattern27;
        SyntaxRule syntaxRule27;
        SyntaxPattern syntaxPattern28;
        SyntaxRule syntaxRule28;
        SyntaxPattern syntaxPattern29;
        SyntaxRule syntaxRule29;
        SyntaxPattern syntaxPattern30;
        SyntaxRule syntaxRule30;
        SyntaxPattern syntaxPattern31;
        SyntaxRules syntaxRules11;
        SimpleSymbol simpleSymbol45;
        SyntaxRule syntaxRule31;
        SyntaxPattern syntaxPattern32;
        SyntaxRule syntaxRule32;
        SyntaxPattern syntaxPattern33;
        SimpleSymbol simpleSymbol46;
        SimpleSymbol simpleSymbol47;
        SyntaxRules syntaxRules12;
        SyntaxRule syntaxRule33;
        SyntaxPattern syntaxPattern34;
        SyntaxRule syntaxRule34;
        SyntaxPattern syntaxPattern35;
        SyntaxRule syntaxRule35;
        SyntaxPattern syntaxPattern36;
        SyntaxRule syntaxRule36;
        SyntaxPattern syntaxPattern37;
        SyntaxRule syntaxRule37;
        SyntaxPattern syntaxPattern38;
        SyntaxRules syntaxRules13;
        SimpleSymbol simpleSymbol48;
        SyntaxRule syntaxRule38;
        SyntaxPattern syntaxPattern39;
        SyntaxRule syntaxRule39;
        SyntaxPattern syntaxPattern40;
        SyntaxRules syntaxRules14;
        SyntaxRule syntaxRule40;
        SyntaxPattern syntaxPattern41;
        SyntaxRule syntaxRule41;
        SyntaxPattern syntaxPattern42;
        SyntaxRule syntaxRule42;
        SyntaxPattern syntaxPattern43;
        SyntaxRule syntaxRule43;
        SyntaxPattern syntaxPattern44;
        SyntaxTemplate syntaxTemplate3;
        SyntaxPattern syntaxPattern45;
        SyntaxTemplate syntaxTemplate4;
        SyntaxPattern syntaxPattern46;
        SyntaxPattern syntaxPattern47;
        SimpleSymbol simpleSymbol49;
        SyntaxTemplate syntaxTemplate5;
        SyntaxPattern syntaxPattern48;
        SyntaxTemplate syntaxTemplate6;
        SyntaxPattern syntaxPattern49;
        SyntaxPattern syntaxPattern50;
        SimpleSymbol simpleSymbol50;
        SyntaxRules syntaxRules15;
        SimpleSymbol simpleSymbol51;
        SyntaxRule syntaxRule44;
        SyntaxPattern syntaxPattern51;
        SyntaxRule syntaxRule45;
        SyntaxPattern syntaxPattern52;
        SyntaxRules syntaxRules16;
        SimpleSymbol simpleSymbol52;
        SyntaxRule syntaxRule46;
        SyntaxPattern syntaxPattern53;
        SyntaxRule syntaxRule47;
        SyntaxPattern syntaxPattern54;
        SyntaxRule syntaxRule48;
        SyntaxPattern syntaxPattern55;
        SyntaxRule syntaxRule49;
        SyntaxPattern syntaxPattern56;
        SyntaxRules syntaxRules17;
        SimpleSymbol simpleSymbol53;
        SyntaxRule syntaxRule50;
        SyntaxPattern syntaxPattern57;
        SimpleSymbol simpleSymbol54;
        SyntaxRules syntaxRules18;
        SimpleSymbol simpleSymbol55;
        SyntaxRule syntaxRule51;
        SyntaxPattern syntaxPattern58;
        SyntaxRule syntaxRule52;
        SyntaxPattern syntaxPattern59;
        SyntaxRule syntaxRule53;
        SyntaxPattern syntaxPattern60;
        SyntaxRule syntaxRule54;
        SyntaxPattern syntaxPattern61;
        SyntaxRule syntaxRule55;
        SyntaxPattern syntaxPattern62;
        SyntaxRule syntaxRule56;
        SyntaxPattern syntaxPattern63;
        SyntaxRule syntaxRule57;
        SyntaxPattern syntaxPattern64;
        SyntaxRule syntaxRule58;
        SyntaxPattern syntaxPattern65;
        std_syntax std_syntax;
        Procedure procedure;
        Procedure procedure2;
        ModuleMethod moduleMethod;
        ModuleMethod moduleMethod2;
        ModuleMethod moduleMethod3;
        ModuleMethod moduleMethod4;
        ModuleMethod moduleMethod5;
        ModuleMethod moduleMethod6;
        ModuleMethod moduleMethod7;
        ModuleMethod moduleMethod8;
        Procedure procedure3;
        new SimpleSymbol("temp");
        Lit77 = (SimpleSymbol) simpleSymbol.readResolve();
        new SimpleSymbol("=>");
        Lit76 = (SimpleSymbol) simpleSymbol2.readResolve();
        new SimpleSymbol("else");
        Lit75 = (SimpleSymbol) simpleSymbol3.readResolve();
        new SimpleSymbol("eqv?");
        Lit74 = (SimpleSymbol) simpleSymbol4.readResolve();
        new SimpleSymbol("x");
        Lit73 = (SimpleSymbol) simpleSymbol5.readResolve();
        new SimpleSymbol("if");
        Lit72 = (SimpleSymbol) simpleSymbol6.readResolve();
        new SimpleSymbol("letrec");
        Lit71 = (SimpleSymbol) simpleSymbol7.readResolve();
        new SimpleSymbol("%let");
        Lit70 = (SimpleSymbol) simpleSymbol8.readResolve();
        new SimpleSymbol("%syntax-error");
        Lit69 = (SimpleSymbol) simpleSymbol9.readResolve();
        new SimpleSymbol("lambda");
        Lit68 = (SimpleSymbol) simpleSymbol10.readResolve();
        new SimpleSymbol("make");
        Lit67 = (SimpleSymbol) simpleSymbol11.readResolve();
        new SimpleSymbol(LispLanguage.quote_sym);
        Lit66 = (SimpleSymbol) simpleSymbol12.readResolve();
        new SimpleSymbol("<gnu.expr.GenericProc>");
        Lit65 = (SimpleSymbol) simpleSymbol13.readResolve();
        new SimpleSymbol("::");
        Lit64 = (SimpleSymbol) simpleSymbol14.readResolve();
        new SimpleSymbol("syntax-case");
        Lit63 = (SimpleSymbol) simpleSymbol15.readResolve();
        SyntaxRules syntaxRules19 = syntaxRules;
        Object[] objArr = new Object[1];
        Object[] objArr2 = objArr;
        Object[] objArr3 = objArr;
        new SimpleSymbol("with-syntax");
        SimpleSymbol simpleSymbol56 = (SimpleSymbol) simpleSymbol16.readResolve();
        Lit61 = simpleSymbol56;
        objArr3[0] = simpleSymbol56;
        SyntaxRule[] syntaxRuleArr = new SyntaxRule[3];
        SyntaxRule[] syntaxRuleArr2 = syntaxRuleArr;
        SyntaxRule[] syntaxRuleArr3 = syntaxRuleArr;
        SyntaxRule syntaxRule59 = syntaxRule;
        SyntaxPattern syntaxPattern66 = syntaxPattern;
        new SyntaxPattern("\f\u0018\f\b\f\u0007\r\u000f\b\b\b", new Object[0], 2);
        Object[] objArr4 = new Object[1];
        Object[] objArr5 = objArr4;
        Object[] objArr6 = objArr4;
        new SimpleSymbol("begin");
        SimpleSymbol simpleSymbol57 = (SimpleSymbol) simpleSymbol17.readResolve();
        Lit56 = simpleSymbol57;
        objArr6[0] = simpleSymbol57;
        new SyntaxRule(syntaxPattern66, "\u0001\u0003", "\u0011\u0018\u0004\t\u0003\b\r\u000b", objArr5, 1);
        syntaxRuleArr3[0] = syntaxRule59;
        SyntaxRule[] syntaxRuleArr4 = syntaxRuleArr2;
        SyntaxRule[] syntaxRuleArr5 = syntaxRuleArr4;
        SyntaxRule[] syntaxRuleArr6 = syntaxRuleArr4;
        SyntaxRule syntaxRule60 = syntaxRule2;
        SyntaxPattern syntaxPattern67 = syntaxPattern2;
        new SyntaxPattern("\f\u0018<,\f\u0007\f\u000f\b\b\f\u0017\r\u001f\u0018\b\b", new Object[0], 4);
        Object[] objArr7 = new Object[2];
        objArr7[0] = Lit63;
        Object[] objArr8 = objArr7;
        objArr8[1] = Lit56;
        new SyntaxRule(syntaxPattern67, "\u0001\u0001\u0001\u0003", "\u0011\u0018\u0004\t\u000b\t\u0010\b\t\u0003\b\u0011\u0018\f\t\u0013\b\u001d\u001b", objArr8, 1);
        syntaxRuleArr6[1] = syntaxRule60;
        SyntaxRule[] syntaxRuleArr7 = syntaxRuleArr5;
        SyntaxRule[] syntaxRuleArr8 = syntaxRuleArr7;
        SyntaxRule[] syntaxRuleArr9 = syntaxRuleArr7;
        SyntaxRule syntaxRule61 = syntaxRule3;
        SyntaxPattern syntaxPattern68 = syntaxPattern3;
        new SyntaxPattern("\f\u0018L-\f\u0007\f\u000f\b\u0000\u0010\b\f\u0017\r\u001f\u0018\b\b", new Object[0], 4);
        Object[] objArr9 = new Object[3];
        objArr9[0] = Lit63;
        Object[] objArr10 = objArr9;
        new SimpleSymbol("list");
        objArr10[1] = (SimpleSymbol) simpleSymbol18.readResolve();
        Object[] objArr11 = objArr10;
        objArr11[2] = Lit56;
        new SyntaxRule(syntaxPattern68, "\u0003\u0003\u0001\u0003", "\u0011\u0018\u00041\u0011\u0018\f\b\r\u000b\t\u0010\b\u0019\b\u0005\u0003\b\u0011\u0018\u0014\t\u0013\b\u001d\u001b", objArr11, 1);
        syntaxRuleArr9[2] = syntaxRule61;
        new SyntaxRules(objArr2, syntaxRuleArr8, 4);
        Lit62 = syntaxRules19;
        SyntaxRules syntaxRules20 = syntaxRules2;
        Object[] objArr12 = new Object[1];
        Object[] objArr13 = objArr12;
        Object[] objArr14 = objArr12;
        new SimpleSymbol("define-for-syntax");
        SimpleSymbol simpleSymbol58 = (SimpleSymbol) simpleSymbol19.readResolve();
        Lit59 = simpleSymbol58;
        objArr14[0] = simpleSymbol58;
        SyntaxRule[] syntaxRuleArr10 = new SyntaxRule[1];
        SyntaxRule[] syntaxRuleArr11 = syntaxRuleArr10;
        SyntaxRule[] syntaxRuleArr12 = syntaxRuleArr10;
        SyntaxRule syntaxRule62 = syntaxRule4;
        SyntaxPattern syntaxPattern69 = syntaxPattern4;
        new SyntaxPattern("\f\u0018\u0003", new Object[0], 1);
        Object[] objArr15 = new Object[2];
        Object[] objArr16 = objArr15;
        Object[] objArr17 = objArr15;
        new SimpleSymbol("begin-for-syntax");
        SimpleSymbol simpleSymbol59 = (SimpleSymbol) simpleSymbol20.readResolve();
        Lit54 = simpleSymbol59;
        objArr17[0] = simpleSymbol59;
        Object[] objArr18 = objArr16;
        new SimpleSymbol("define");
        objArr18[1] = (SimpleSymbol) simpleSymbol21.readResolve();
        new SyntaxRule(syntaxPattern69, "\u0000", "\u0011\u0018\u0004\b\u0011\u0018\f\u0002", objArr18, 0);
        syntaxRuleArr12[0] = syntaxRule62;
        new SyntaxRules(objArr13, syntaxRuleArr11, 1);
        Lit60 = syntaxRules20;
        SyntaxTemplate syntaxTemplate7 = syntaxTemplate;
        new SyntaxTemplate("\u0001\u0000", "\u0018\u0004", new Object[]{Values.empty}, 0);
        Lit58 = syntaxTemplate7;
        new SyntaxTemplate("\u0001\u0000", "\n", new Object[0], 0);
        Lit57 = syntaxTemplate2;
        new SyntaxPattern("\f\u0007\u000b", new Object[0], 2);
        Lit55 = syntaxPattern5;
        new SimpleSymbol("syntax-column");
        Lit53 = (SimpleSymbol) simpleSymbol22.readResolve();
        new SimpleSymbol("syntax-line");
        Lit52 = (SimpleSymbol) simpleSymbol23.readResolve();
        new SimpleSymbol("syntax-source");
        Lit51 = (SimpleSymbol) simpleSymbol24.readResolve();
        new SimpleSymbol("free-identifier=?");
        Lit50 = (SimpleSymbol) simpleSymbol25.readResolve();
        new SimpleSymbol("identifier?");
        Lit49 = (SimpleSymbol) simpleSymbol26.readResolve();
        new SimpleSymbol("generate-temporaries");
        Lit48 = (SimpleSymbol) simpleSymbol27.readResolve();
        new SimpleSymbol("datum->syntax-object");
        Lit47 = (SimpleSymbol) simpleSymbol28.readResolve();
        new SimpleSymbol("syntax-object->datum");
        Lit46 = (SimpleSymbol) simpleSymbol29.readResolve();
        SyntaxRules syntaxRules21 = syntaxRules3;
        Object[] objArr19 = new Object[3];
        Object[] objArr20 = objArr19;
        Object[] objArr21 = objArr19;
        new SimpleSymbol("define-procedure");
        SimpleSymbol simpleSymbol60 = (SimpleSymbol) simpleSymbol30.readResolve();
        Lit44 = simpleSymbol60;
        objArr21[0] = simpleSymbol60;
        Object[] objArr22 = objArr20;
        objArr22[1] = Lit64;
        Object[] objArr23 = objArr22;
        Object[] objArr24 = objArr23;
        objArr23[2] = Lit65;
        SyntaxRule[] syntaxRuleArr13 = new SyntaxRule[1];
        SyntaxRule[] syntaxRuleArr14 = syntaxRuleArr13;
        SyntaxRule[] syntaxRuleArr15 = syntaxRuleArr13;
        SyntaxRule syntaxRule63 = syntaxRule5;
        SyntaxPattern syntaxPattern70 = syntaxPattern6;
        new SyntaxPattern("\f\u0018\f\u0007\r\u000f\b\b\b", new Object[0], 2);
        Object[] objArr25 = new Object[9];
        objArr25[0] = Lit56;
        Object[] objArr26 = objArr25;
        new SimpleSymbol("define-constant");
        objArr26[1] = (SimpleSymbol) simpleSymbol31.readResolve();
        Object[] objArr27 = objArr26;
        objArr27[2] = Lit64;
        Object[] objArr28 = objArr27;
        objArr28[3] = Lit65;
        Object[] objArr29 = objArr28;
        objArr29[4] = Lit67;
        Object[] objArr30 = objArr29;
        objArr30[5] = Lit66;
        Object[] objArr31 = objArr30;
        new SimpleSymbol("invoke");
        objArr31[6] = (SimpleSymbol) simpleSymbol32.readResolve();
        Object[] objArr32 = objArr31;
        SimpleSymbol simpleSymbol61 = Lit66;
        new SimpleSymbol("setProperties");
        objArr32[7] = PairWithPosition.make(simpleSymbol61, PairWithPosition.make((SimpleSymbol) simpleSymbol33.readResolve(), LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 1024020), "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 1024020);
        Object[] objArr33 = objArr32;
        new SimpleSymbol("java.lang.Object[]");
        objArr33[8] = (SimpleSymbol) simpleSymbol34.readResolve();
        new SyntaxRule(syntaxPattern70, "\u0001\u0003", "\u0011\u0018\u0004Á\u0011\u0018\f\t\u0003\u0011\u0018\u0014\u0011\u0018\u001c\b\u0011\u0018$\u0011\u0018\u001c\b\u0011\u0018,\b\u0003\b\u0011\u00184\t\u0003\u0011\u0018<\b\u0011\u0018D\b\r\u000b", objArr33, 1);
        syntaxRuleArr15[0] = syntaxRule63;
        new SyntaxRules(objArr24, syntaxRuleArr14, 2);
        Lit45 = syntaxRules21;
        SyntaxRules syntaxRules22 = syntaxRules4;
        Object[] objArr34 = new Object[1];
        Object[] objArr35 = objArr34;
        Object[] objArr36 = objArr34;
        new SimpleSymbol("delay");
        SimpleSymbol simpleSymbol62 = (SimpleSymbol) simpleSymbol35.readResolve();
        Lit42 = simpleSymbol62;
        objArr36[0] = simpleSymbol62;
        SyntaxRule[] syntaxRuleArr16 = new SyntaxRule[1];
        SyntaxRule[] syntaxRuleArr17 = syntaxRuleArr16;
        SyntaxRule[] syntaxRuleArr18 = syntaxRuleArr16;
        SyntaxRule syntaxRule64 = syntaxRule6;
        SyntaxPattern syntaxPattern71 = syntaxPattern7;
        new SyntaxPattern("\f\u0018\f\u0007\b", new Object[0], 1);
        Object[] objArr37 = new Object[3];
        objArr37[0] = Lit67;
        Object[] objArr38 = objArr37;
        new SimpleSymbol("<kawa.lang.Promise>");
        objArr38[1] = (SimpleSymbol) simpleSymbol36.readResolve();
        Object[] objArr39 = objArr38;
        objArr39[2] = Lit68;
        new SyntaxRule(syntaxPattern71, "\u0001", "\u0011\u0018\u0004\u0011\u0018\f\b\u0011\u0018\u0014\t\u0010\b\u0003", objArr39, 0);
        syntaxRuleArr18[0] = syntaxRule64;
        new SyntaxRules(objArr35, syntaxRuleArr17, 1);
        Lit43 = syntaxRules22;
        SyntaxRules syntaxRules23 = syntaxRules5;
        Object[] objArr40 = new Object[2];
        Object[] objArr41 = objArr40;
        Object[] objArr42 = objArr40;
        new SimpleSymbol("do");
        SimpleSymbol simpleSymbol63 = (SimpleSymbol) simpleSymbol37.readResolve();
        Lit40 = simpleSymbol63;
        objArr42[0] = simpleSymbol63;
        Object[] objArr43 = objArr41;
        Object[] objArr44 = objArr43;
        objArr43[1] = Lit64;
        SyntaxRule[] syntaxRuleArr19 = new SyntaxRule[1];
        SyntaxRule[] syntaxRuleArr20 = syntaxRuleArr19;
        SyntaxRule[] syntaxRuleArr21 = syntaxRuleArr19;
        SyntaxRule syntaxRule65 = syntaxRule7;
        SyntaxPattern syntaxPattern72 = syntaxPattern8;
        new SyntaxPattern("\f\u0018,\r\u0007\u0000\b\b\u001c\f\u000f\u0013\r\u001f\u0018\b\b", new Object[0], 4);
        Object[] objArr45 = new Object[9];
        objArr45[0] = Lit71;
        Object[] objArr46 = objArr45;
        new SimpleSymbol("%do%loop");
        objArr46[1] = (SimpleSymbol) simpleSymbol38.readResolve();
        Object[] objArr47 = objArr46;
        Object[] objArr48 = objArr47;
        Object[] objArr49 = objArr47;
        new SimpleSymbol("%do-lambda1");
        SimpleSymbol simpleSymbol64 = (SimpleSymbol) simpleSymbol39.readResolve();
        Lit36 = simpleSymbol64;
        objArr49[2] = simpleSymbol64;
        Object[] objArr50 = objArr48;
        objArr50[3] = Lit72;
        Object[] objArr51 = objArr50;
        new SimpleSymbol("not");
        objArr51[4] = (SimpleSymbol) simpleSymbol40.readResolve();
        Object[] objArr52 = objArr51;
        objArr52[5] = Lit56;
        Object[] objArr53 = objArr52;
        Object[] objArr54 = objArr53;
        Object[] objArr55 = objArr53;
        new SimpleSymbol("%do-step");
        SimpleSymbol simpleSymbol65 = (SimpleSymbol) simpleSymbol41.readResolve();
        Lit32 = simpleSymbol65;
        objArr55[6] = simpleSymbol65;
        Object[] objArr56 = objArr54;
        objArr56[7] = Values.empty;
        Object[] objArr57 = objArr56;
        Object[] objArr58 = objArr57;
        Object[] objArr59 = objArr57;
        new SimpleSymbol("%do-init");
        SimpleSymbol simpleSymbol66 = (SimpleSymbol) simpleSymbol42.readResolve();
        Lit34 = simpleSymbol66;
        objArr59[8] = simpleSymbol66;
        new SyntaxRule(syntaxPattern72, "\u0003\u0001\u0000\u0003", "\u0011\u0018\u0004Ɖ\b\u0011\u0018\f\b\u0011\u0018\u0014\u0019\b\u0005\u0003\t\u0010\b\u0011\u0018\u001c)\u0011\u0018$\b\u000b\u0011\u0018,\u0011\u001d\u001b\b\u0011\u0018\f\b\u0005\u0011\u00184\u0003\b\u0011\u0018,\u0011\u0018<\u0012\b\u0011\u0018\f\b\u0005\u0011\u0018D\b\u0003", objArr58, 1);
        syntaxRuleArr21[0] = syntaxRule65;
        new SyntaxRules(objArr44, syntaxRuleArr20, 4);
        Lit41 = syntaxRules23;
        SyntaxRules syntaxRules24 = syntaxRules6;
        Object[] objArr60 = new Object[1];
        Object[] objArr61 = objArr60;
        Object[] objArr62 = objArr60;
        new SimpleSymbol("%do-lambda2");
        SimpleSymbol simpleSymbol67 = (SimpleSymbol) simpleSymbol43.readResolve();
        Lit38 = simpleSymbol67;
        objArr62[0] = simpleSymbol67;
        SyntaxRule[] syntaxRuleArr22 = new SyntaxRule[2];
        SyntaxRule[] syntaxRuleArr23 = syntaxRuleArr22;
        SyntaxRule[] syntaxRuleArr24 = syntaxRuleArr22;
        SyntaxRule syntaxRule66 = syntaxRule8;
        new SyntaxPattern("\f\u0018\u001c\f\u0007\u000b\f\u0017\f\u001f\b", new Object[0], 4);
        new SyntaxRule(syntaxPattern9, "\u0001\u0000\u0001\u0001", "\u0011\u0018\u0004\t\n\u0019\t\u0003\u0013\b\u001b", new Object[]{Lit38}, 0);
        syntaxRuleArr24[0] = syntaxRule66;
        SyntaxRule[] syntaxRuleArr25 = syntaxRuleArr23;
        SyntaxRule[] syntaxRuleArr26 = syntaxRuleArr25;
        SyntaxRule[] syntaxRuleArr27 = syntaxRuleArr25;
        SyntaxRule syntaxRule67 = syntaxRule9;
        new SyntaxPattern("\f\u0018\f\b\f\u0007\f\u000f\b", new Object[0], 2);
        new SyntaxRule(syntaxPattern10, "\u0001\u0001", "\u0011\u0018\u0004\t\u0003\b\u000b", new Object[]{Lit68}, 0);
        syntaxRuleArr27[1] = syntaxRule67;
        new SyntaxRules(objArr61, syntaxRuleArr26, 4);
        Lit39 = syntaxRules24;
        SyntaxRules syntaxRules25 = syntaxRules7;
        Object[] objArr63 = new Object[2];
        objArr63[0] = Lit36;
        Object[] objArr64 = objArr63;
        Object[] objArr65 = objArr64;
        objArr64[1] = Lit64;
        SyntaxRule[] syntaxRuleArr28 = new SyntaxRule[5];
        SyntaxRule[] syntaxRuleArr29 = syntaxRuleArr28;
        SyntaxRule[] syntaxRuleArr30 = syntaxRuleArr28;
        SyntaxRule syntaxRule68 = syntaxRule10;
        SyntaxPattern syntaxPattern73 = syntaxPattern11;
        new SyntaxPattern("\f\u0018l\\\f\u0007\f\u0002\f\u000f\f\u0017\f\u001f\b#\f/\f7\b", new Object[]{Lit64}, 7);
        Object[] objArr66 = new Object[2];
        objArr66[0] = Lit36;
        Object[] objArr67 = objArr66;
        objArr67[1] = Lit64;
        new SyntaxRule(syntaxPattern73, "\u0001\u0001\u0001\u0001\u0000\u0001\u0001", "\u0011\u0018\u0004\t\"I9\t\u0003\u0011\u0018\f\b\u000b+\b3", objArr67, 0);
        syntaxRuleArr30[0] = syntaxRule68;
        SyntaxRule[] syntaxRuleArr31 = syntaxRuleArr29;
        SyntaxRule[] syntaxRuleArr32 = syntaxRuleArr31;
        SyntaxRule[] syntaxRuleArr33 = syntaxRuleArr31;
        SyntaxRule syntaxRule69 = syntaxRule11;
        SyntaxPattern syntaxPattern74 = syntaxPattern12;
        new SyntaxPattern("\f\u0018\\L\f\u0007\f\u0002\f\u000f\f\u0017\b\u001b\f'\f/\b", new Object[]{Lit64}, 6);
        Object[] objArr68 = new Object[2];
        objArr68[0] = Lit36;
        Object[] objArr69 = objArr68;
        objArr69[1] = Lit64;
        new SyntaxRule(syntaxPattern74, "\u0001\u0001\u0001\u0000\u0001\u0001", "\u0011\u0018\u0004\t\u001aI9\t\u0003\u0011\u0018\f\b\u000b#\b+", objArr69, 0);
        syntaxRuleArr33[1] = syntaxRule69;
        SyntaxRule[] syntaxRuleArr34 = syntaxRuleArr32;
        SyntaxRule[] syntaxRuleArr35 = syntaxRuleArr34;
        SyntaxRule[] syntaxRuleArr36 = syntaxRuleArr34;
        SyntaxRule syntaxRule70 = syntaxRule12;
        new SyntaxPattern("\f\u0018L<\f\u0007\f\u000f\f\u0017\b\u001b\f'\f/\b", new Object[0], 6);
        new SyntaxRule(syntaxPattern13, "\u0001\u0001\u0001\u0000\u0001\u0001", "\u0011\u0018\u0004\t\u001a\u0019\t\u0003#\b+", new Object[]{Lit36}, 0);
        syntaxRuleArr36[2] = syntaxRule70;
        SyntaxRule[] syntaxRuleArr37 = syntaxRuleArr35;
        SyntaxRule[] syntaxRuleArr38 = syntaxRuleArr37;
        SyntaxRule[] syntaxRuleArr39 = syntaxRuleArr37;
        SyntaxRule syntaxRule71 = syntaxRule13;
        new SyntaxPattern("\f\u0018<,\f\u0007\f\u000f\b\u0013\f\u001f\f'\b", new Object[0], 5);
        new SyntaxRule(syntaxPattern14, "\u0001\u0001\u0000\u0001\u0001", "\u0011\u0018\u0004\t\u0012\u0019\t\u0003\u001b\b#", new Object[]{Lit36}, 0);
        syntaxRuleArr39[3] = syntaxRule71;
        SyntaxRule[] syntaxRuleArr40 = syntaxRuleArr38;
        SyntaxRule[] syntaxRuleArr41 = syntaxRuleArr40;
        SyntaxRule[] syntaxRuleArr42 = syntaxRuleArr40;
        SyntaxRule syntaxRule72 = syntaxRule14;
        new SyntaxPattern("\f\u0018\f\b\f\u0007\f\u000f\b", new Object[0], 2);
        new SyntaxRule(syntaxPattern15, "\u0001\u0001", "\u0011\u0018\u0004\t\u0003\t\u0010\b\u000b", new Object[]{Lit38}, 0);
        syntaxRuleArr42[4] = syntaxRule72;
        new SyntaxRules(objArr65, syntaxRuleArr41, 7);
        Lit37 = syntaxRules25;
        SyntaxRules syntaxRules26 = syntaxRules8;
        Object[] objArr70 = new Object[2];
        objArr70[0] = Lit34;
        Object[] objArr71 = objArr70;
        Object[] objArr72 = objArr71;
        objArr71[1] = Lit64;
        SyntaxRule[] syntaxRuleArr43 = new SyntaxRule[7];
        SyntaxRule[] syntaxRuleArr44 = syntaxRuleArr43;
        SyntaxRule[] syntaxRuleArr45 = syntaxRuleArr43;
        SyntaxRule syntaxRule73 = syntaxRule15;
        SyntaxPattern syntaxPattern75 = syntaxPattern16;
        new SyntaxPattern("\f\u0018\\\f\u0007\f\u0002\f\u000f\f\u0017\f\u001f\b\b", new Object[]{Lit64}, 4);
        new SyntaxRule(syntaxPattern75, "\u0001\u0001\u0001\u0001", "\u0013", new Object[0], 0);
        syntaxRuleArr45[0] = syntaxRule73;
        SyntaxRule[] syntaxRuleArr46 = syntaxRuleArr44;
        SyntaxRule[] syntaxRuleArr47 = syntaxRuleArr46;
        SyntaxRule[] syntaxRuleArr48 = syntaxRuleArr46;
        SyntaxRule syntaxRule74 = syntaxRule16;
        SyntaxPattern syntaxPattern76 = syntaxPattern17;
        new SyntaxPattern("\f\u0018L\f\u0007\f\u0002\f\u000f\f\u0017\b\b", new Object[]{Lit64}, 3);
        new SyntaxRule(syntaxPattern76, "\u0001\u0001\u0001", "\u0013", new Object[0], 0);
        syntaxRuleArr48[1] = syntaxRule74;
        SyntaxRule[] syntaxRuleArr49 = syntaxRuleArr47;
        new SyntaxPattern("\f\u0018<\f\u0007\f\u000f\f\u0017\b\b", new Object[0], 3);
        new SyntaxRule(syntaxPattern18, "\u0001\u0001\u0001", "\u000b", new Object[0], 0);
        syntaxRuleArr49[2] = syntaxRule17;
        SyntaxRule[] syntaxRuleArr50 = syntaxRuleArr49;
        new SyntaxPattern("\f\u0018,\f\u0007\f\u000f\b\b", new Object[0], 2);
        new SyntaxRule(syntaxPattern19, "\u0001\u0001", "\u000b", new Object[0], 0);
        syntaxRuleArr50[3] = syntaxRule18;
        SyntaxRule[] syntaxRuleArr51 = syntaxRuleArr50;
        new SyntaxPattern("\f\u0018<\f\u0007\f\u000f\f\u0017\b\b", new Object[0], 3);
        new SyntaxRule(syntaxPattern20, "\u0001\u0001\u0001", "\u0013", new Object[0], 0);
        syntaxRuleArr51[4] = syntaxRule19;
        SyntaxRule[] syntaxRuleArr52 = syntaxRuleArr51;
        SyntaxRule[] syntaxRuleArr53 = syntaxRuleArr52;
        SyntaxRule[] syntaxRuleArr54 = syntaxRuleArr52;
        SyntaxRule syntaxRule75 = syntaxRule20;
        new SyntaxPattern("\f\u0018\u001c\f\u0007\b\b", new Object[0], 1);
        new SyntaxRule(syntaxPattern21, "\u0001", "\u0018\u0004", new Object[]{PairWithPosition.make(Lit69, PairWithPosition.make("do binding with no value", LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 794643), "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 794628)}, 0);
        syntaxRuleArr54[5] = syntaxRule75;
        SyntaxRule[] syntaxRuleArr55 = syntaxRuleArr53;
        SyntaxRule[] syntaxRuleArr56 = syntaxRuleArr55;
        SyntaxRule[] syntaxRuleArr57 = syntaxRuleArr55;
        SyntaxRule syntaxRule76 = syntaxRule21;
        new SyntaxPattern("\f\u0018L\f\u0007\f\u000f\f\u0017\f\u001f\b\b", new Object[0], 4);
        new SyntaxRule(syntaxPattern22, "\u0001\u0001\u0001\u0001", "\u0018\u0004", new Object[]{PairWithPosition.make(Lit69, PairWithPosition.make("do binding must have syntax: (var [:: type] init [step])", LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 806917), "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 802820)}, 0);
        syntaxRuleArr57[6] = syntaxRule76;
        new SyntaxRules(objArr72, syntaxRuleArr56, 4);
        Lit35 = syntaxRules26;
        SyntaxRules syntaxRules27 = syntaxRules9;
        Object[] objArr73 = new Object[2];
        objArr73[0] = Lit32;
        Object[] objArr74 = objArr73;
        Object[] objArr75 = objArr74;
        objArr74[1] = Lit64;
        SyntaxRule[] syntaxRuleArr58 = new SyntaxRule[4];
        SyntaxRule[] syntaxRuleArr59 = syntaxRuleArr58;
        SyntaxRule[] syntaxRuleArr60 = syntaxRuleArr58;
        SyntaxRule syntaxRule77 = syntaxRule22;
        SyntaxPattern syntaxPattern77 = syntaxPattern23;
        new SyntaxPattern("\f\u0018\f\u0007\f\u0002\f\u000f\f\u0017\f\u001f\b", new Object[]{Lit64}, 4);
        new SyntaxRule(syntaxPattern77, "\u0001\u0001\u0001\u0001", "\u001b", new Object[0], 0);
        syntaxRuleArr60[0] = syntaxRule77;
        SyntaxRule[] syntaxRuleArr61 = syntaxRuleArr59;
        SyntaxRule[] syntaxRuleArr62 = syntaxRuleArr61;
        SyntaxRule[] syntaxRuleArr63 = syntaxRuleArr61;
        SyntaxRule syntaxRule78 = syntaxRule23;
        SyntaxPattern syntaxPattern78 = syntaxPattern24;
        new SyntaxPattern("\f\u0018\f\u0007\f\u0002\f\u000f\f\u0017\b", new Object[]{Lit64}, 3);
        new SyntaxRule(syntaxPattern78, "\u0001\u0001\u0001", "\u0003", new Object[0], 0);
        syntaxRuleArr63[1] = syntaxRule78;
        SyntaxRule[] syntaxRuleArr64 = syntaxRuleArr62;
        new SyntaxPattern("\f\u0018\f\u0007\f\u000f\f\u0017\b", new Object[0], 3);
        new SyntaxRule(syntaxPattern25, "\u0001\u0001\u0001", "\u0013", new Object[0], 0);
        syntaxRuleArr64[2] = syntaxRule24;
        SyntaxRule[] syntaxRuleArr65 = syntaxRuleArr64;
        new SyntaxPattern("\f\u0018\f\u0007\f\u000f\b", new Object[0], 2);
        new SyntaxRule(syntaxPattern26, "\u0001\u0001", "\u0003", new Object[0], 0);
        syntaxRuleArr65[3] = syntaxRule25;
        new SyntaxRules(objArr75, syntaxRuleArr65, 4);
        Lit33 = syntaxRules27;
        SyntaxRules syntaxRules28 = syntaxRules10;
        Object[] objArr76 = new Object[1];
        Object[] objArr77 = objArr76;
        Object[] objArr78 = objArr76;
        new SimpleSymbol("let*");
        SimpleSymbol simpleSymbol68 = (SimpleSymbol) simpleSymbol44.readResolve();
        Lit30 = simpleSymbol68;
        objArr78[0] = simpleSymbol68;
        SyntaxRule[] syntaxRuleArr66 = new SyntaxRule[5];
        SyntaxRule[] syntaxRuleArr67 = syntaxRuleArr66;
        SyntaxRule[] syntaxRuleArr68 = syntaxRuleArr66;
        SyntaxRule syntaxRule79 = syntaxRule26;
        new SyntaxPattern("\f\u0018\f\b\u0003", new Object[0], 1);
        new SyntaxRule(syntaxPattern27, "\u0000", "\u0011\u0018\u0004\t\u0010\u0002", new Object[]{Lit70}, 0);
        syntaxRuleArr68[0] = syntaxRule79;
        SyntaxRule[] syntaxRuleArr69 = syntaxRuleArr67;
        SyntaxRule[] syntaxRuleArr70 = syntaxRuleArr69;
        SyntaxRule[] syntaxRuleArr71 = syntaxRuleArr69;
        SyntaxRule syntaxRule80 = syntaxRule27;
        new SyntaxPattern("\f\u0018\u001c\f\u0007\b\u000b", new Object[0], 2);
        new SyntaxRule(syntaxPattern28, "\u0001\u0000", "\u0011\u0018\u0004\u0011\b\u0003\n", new Object[]{Lit70}, 0);
        syntaxRuleArr71[1] = syntaxRule80;
        SyntaxRule[] syntaxRuleArr72 = syntaxRuleArr70;
        SyntaxRule[] syntaxRuleArr73 = syntaxRuleArr72;
        SyntaxRule[] syntaxRuleArr74 = syntaxRuleArr72;
        SyntaxRule syntaxRule81 = syntaxRule28;
        SyntaxPattern syntaxPattern79 = syntaxPattern29;
        new SyntaxPattern("\f\u0018\u001c\f\u0007\u000b\u0013", new Object[0], 3);
        Object[] objArr79 = new Object[2];
        objArr79[0] = Lit70;
        Object[] objArr80 = objArr79;
        objArr80[1] = Lit30;
        new SyntaxRule(syntaxPattern79, "\u0001\u0000\u0000", "\u0011\u0018\u0004\u0011\b\u0003\b\u0011\u0018\f\t\n\u0012", objArr80, 0);
        syntaxRuleArr74[2] = syntaxRule81;
        SyntaxRule[] syntaxRuleArr75 = syntaxRuleArr73;
        SyntaxRule[] syntaxRuleArr76 = syntaxRuleArr75;
        SyntaxRule[] syntaxRuleArr77 = syntaxRuleArr75;
        SyntaxRule syntaxRule82 = syntaxRule29;
        new SyntaxPattern("\f\u0018\f\u0007\u000b", new Object[0], 2);
        new SyntaxRule(syntaxPattern30, "\u0001\u0000", "\u0018\u0004", new Object[]{PairWithPosition.make(Lit69, PairWithPosition.make("invalid bindings list in let*", LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 679943), "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 675846)}, 0);
        syntaxRuleArr77[3] = syntaxRule82;
        SyntaxRule[] syntaxRuleArr78 = syntaxRuleArr76;
        SyntaxRule[] syntaxRuleArr79 = syntaxRuleArr78;
        SyntaxRule[] syntaxRuleArr80 = syntaxRuleArr78;
        SyntaxRule syntaxRule83 = syntaxRule30;
        new SyntaxPattern("\f\u0018\u0003", new Object[0], 1);
        new SyntaxRule(syntaxPattern31, "\u0000", "\u0018\u0004", new Object[]{PairWithPosition.make(Lit69, PairWithPosition.make("missing bindings list in let*", LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 692231), "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 688134)}, 0);
        syntaxRuleArr80[4] = syntaxRule83;
        new SyntaxRules(objArr77, syntaxRuleArr79, 3);
        Lit31 = syntaxRules28;
        SyntaxRules syntaxRules29 = syntaxRules11;
        Object[] objArr81 = new Object[1];
        Object[] objArr82 = objArr81;
        Object[] objArr83 = objArr81;
        new SimpleSymbol("let");
        SimpleSymbol simpleSymbol69 = (SimpleSymbol) simpleSymbol45.readResolve();
        Lit28 = simpleSymbol69;
        objArr83[0] = simpleSymbol69;
        SyntaxRule[] syntaxRuleArr81 = new SyntaxRule[2];
        SyntaxRule[] syntaxRuleArr82 = syntaxRuleArr81;
        SyntaxRule[] syntaxRuleArr83 = syntaxRuleArr81;
        SyntaxRule syntaxRule84 = syntaxRule31;
        new SyntaxPattern("\f\u0018,\r\u0007\u0000\b\b\u000b", new Object[0], 2);
        new SyntaxRule(syntaxPattern32, "\u0003\u0000", "\u0011\u0018\u0004\u0019\b\u0005\u0003\n", new Object[]{Lit70}, 1);
        syntaxRuleArr83[0] = syntaxRule84;
        SyntaxRule[] syntaxRuleArr84 = syntaxRuleArr82;
        SyntaxRule[] syntaxRuleArr85 = syntaxRuleArr84;
        SyntaxRule[] syntaxRuleArr86 = syntaxRuleArr84;
        SyntaxRule syntaxRule85 = syntaxRule32;
        SyntaxPattern syntaxPattern80 = syntaxPattern33;
        new SyntaxPattern("\f\u0018\f\u0007,\r\u000f\b\b\b\u0013", new Object[0], 3);
        Object[] objArr84 = new Object[3];
        objArr84[0] = Lit71;
        Object[] objArr85 = objArr84;
        Object[] objArr86 = objArr85;
        Object[] objArr87 = objArr85;
        new SimpleSymbol("%let-lambda1");
        SimpleSymbol simpleSymbol70 = (SimpleSymbol) simpleSymbol46.readResolve();
        Lit22 = simpleSymbol70;
        objArr87[1] = simpleSymbol70;
        Object[] objArr88 = objArr86;
        Object[] objArr89 = objArr88;
        Object[] objArr90 = objArr88;
        new SimpleSymbol("%let-init");
        SimpleSymbol simpleSymbol71 = (SimpleSymbol) simpleSymbol47.readResolve();
        Lit26 = simpleSymbol71;
        objArr90[2] = simpleSymbol71;
        new SyntaxRule(syntaxPattern80, "\u0001\u0003\u0000", "©\u0011\u0018\u0004y\b\t\u0003\b\u0011\u0018\f\u0019\b\r\u000b\t\u0010\b\u0012\b\u0003\b\r\u0011\u0018\u0014\b\u000b", objArr89, 1);
        syntaxRuleArr86[1] = syntaxRule85;
        new SyntaxRules(objArr82, syntaxRuleArr85, 3);
        Lit29 = syntaxRules29;
        SyntaxRules syntaxRules30 = syntaxRules12;
        Object[] objArr91 = new Object[2];
        objArr91[0] = Lit26;
        Object[] objArr92 = objArr91;
        Object[] objArr93 = objArr92;
        objArr92[1] = Lit64;
        SyntaxRule[] syntaxRuleArr87 = new SyntaxRule[5];
        new SyntaxPattern("\f\u0018,\f\u0007\f\u000f\b\b", new Object[0], 2);
        new SyntaxRule(syntaxPattern34, "\u0001\u0001", "\u000b", new Object[0], 0);
        syntaxRuleArr87[0] = syntaxRule33;
        SyntaxRule[] syntaxRuleArr88 = syntaxRuleArr87;
        SyntaxRule[] syntaxRuleArr89 = syntaxRuleArr88;
        SyntaxRule[] syntaxRuleArr90 = syntaxRuleArr88;
        SyntaxRule syntaxRule86 = syntaxRule34;
        SyntaxPattern syntaxPattern81 = syntaxPattern35;
        new SyntaxPattern("\f\u0018L\f\u0007\f\u0002\f\u000f\f\u0017\b\b", new Object[]{Lit64}, 3);
        new SyntaxRule(syntaxPattern81, "\u0001\u0001\u0001", "\u0013", new Object[0], 0);
        syntaxRuleArr90[1] = syntaxRule86;
        SyntaxRule[] syntaxRuleArr91 = syntaxRuleArr89;
        new SyntaxPattern("\f\u0018<\f\u0007\f\u000f\f\u0017\b\b", new Object[0], 3);
        new SyntaxRule(syntaxPattern36, "\u0001\u0001\u0001", "\u0013", new Object[0], 0);
        syntaxRuleArr91[2] = syntaxRule35;
        SyntaxRule[] syntaxRuleArr92 = syntaxRuleArr91;
        SyntaxRule[] syntaxRuleArr93 = syntaxRuleArr92;
        SyntaxRule[] syntaxRuleArr94 = syntaxRuleArr92;
        SyntaxRule syntaxRule87 = syntaxRule36;
        new SyntaxPattern("\f\u0018\u001c\f\u0007\b\b", new Object[0], 1);
        new SyntaxRule(syntaxPattern37, "\u0001", "\u0018\u0004", new Object[]{PairWithPosition.make(Lit69, PairWithPosition.make("let binding with no value", LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 552979), "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 552964)}, 0);
        syntaxRuleArr94[3] = syntaxRule87;
        SyntaxRule[] syntaxRuleArr95 = syntaxRuleArr93;
        SyntaxRule[] syntaxRuleArr96 = syntaxRuleArr95;
        SyntaxRule[] syntaxRuleArr97 = syntaxRuleArr95;
        SyntaxRule syntaxRule88 = syntaxRule37;
        new SyntaxPattern("\f\u0018L\f\u0007\f\u000f\f\u0017\f\u001f\b\b", new Object[0], 4);
        new SyntaxRule(syntaxPattern38, "\u0001\u0001\u0001\u0001", "\u0018\u0004", new Object[]{PairWithPosition.make(Lit69, PairWithPosition.make("let binding must have syntax: (var [type] init)", LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 565253), "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 561156)}, 0);
        syntaxRuleArr97[4] = syntaxRule88;
        new SyntaxRules(objArr93, syntaxRuleArr96, 4);
        Lit27 = syntaxRules30;
        SyntaxRules syntaxRules31 = syntaxRules13;
        Object[] objArr94 = new Object[1];
        Object[] objArr95 = objArr94;
        Object[] objArr96 = objArr94;
        new SimpleSymbol("%let-lambda2");
        SimpleSymbol simpleSymbol72 = (SimpleSymbol) simpleSymbol48.readResolve();
        Lit24 = simpleSymbol72;
        objArr96[0] = simpleSymbol72;
        SyntaxRule[] syntaxRuleArr98 = new SyntaxRule[2];
        SyntaxRule[] syntaxRuleArr99 = syntaxRuleArr98;
        SyntaxRule[] syntaxRuleArr100 = syntaxRuleArr98;
        SyntaxRule syntaxRule89 = syntaxRule38;
        new SyntaxPattern("\f\u0018\u001c\f\u0007\u000b\f\u0017\f\u001f\b", new Object[0], 4);
        new SyntaxRule(syntaxPattern39, "\u0001\u0000\u0001\u0001", "\u0011\u0018\u0004\t\n\u0019\t\u0003\u0013\b\u001b", new Object[]{Lit24}, 0);
        syntaxRuleArr100[0] = syntaxRule89;
        SyntaxRule[] syntaxRuleArr101 = syntaxRuleArr99;
        SyntaxRule[] syntaxRuleArr102 = syntaxRuleArr101;
        SyntaxRule[] syntaxRuleArr103 = syntaxRuleArr101;
        SyntaxRule syntaxRule90 = syntaxRule39;
        new SyntaxPattern("\f\u0018\f\b\f\u0007\f\u000f\b", new Object[0], 2);
        new SyntaxRule(syntaxPattern40, "\u0001\u0001", "\u0011\u0018\u0004\t\u0003\u000b", new Object[]{Lit68}, 0);
        syntaxRuleArr103[1] = syntaxRule90;
        new SyntaxRules(objArr95, syntaxRuleArr102, 4);
        Lit25 = syntaxRules31;
        SyntaxRules syntaxRules32 = syntaxRules14;
        Object[] objArr97 = new Object[2];
        objArr97[0] = Lit22;
        Object[] objArr98 = objArr97;
        Object[] objArr99 = objArr98;
        objArr98[1] = Lit64;
        SyntaxRule[] syntaxRuleArr104 = new SyntaxRule[4];
        SyntaxRule[] syntaxRuleArr105 = syntaxRuleArr104;
        SyntaxRule[] syntaxRuleArr106 = syntaxRuleArr104;
        SyntaxRule syntaxRule91 = syntaxRule40;
        new SyntaxPattern("\f\u0018L<\f\u0007\f\u000f\f\u0017\b\u001b\f'\f/\b", new Object[0], 6);
        new SyntaxRule(syntaxPattern41, "\u0001\u0001\u0001\u0000\u0001\u0001", "\u0011\u0018\u0004\t\u001a1!\t\u0003\b\u000b#\b+", new Object[]{Lit22}, 0);
        syntaxRuleArr106[0] = syntaxRule91;
        SyntaxRule[] syntaxRuleArr107 = syntaxRuleArr105;
        SyntaxRule[] syntaxRuleArr108 = syntaxRuleArr107;
        SyntaxRule[] syntaxRuleArr109 = syntaxRuleArr107;
        SyntaxRule syntaxRule92 = syntaxRule41;
        SyntaxPattern syntaxPattern82 = syntaxPattern42;
        new SyntaxPattern("\f\u0018\\L\f\u0007\f\u0002\f\u000f\f\u0017\b\u001b\f'\f/\b", new Object[]{Lit64}, 6);
        new SyntaxRule(syntaxPattern82, "\u0001\u0001\u0001\u0000\u0001\u0001", "\u0011\u0018\u0004\t\u001a1!\t\u0003\b\u000b#\b+", new Object[]{Lit22}, 0);
        syntaxRuleArr109[1] = syntaxRule92;
        SyntaxRule[] syntaxRuleArr110 = syntaxRuleArr108;
        SyntaxRule[] syntaxRuleArr111 = syntaxRuleArr110;
        SyntaxRule[] syntaxRuleArr112 = syntaxRuleArr110;
        SyntaxRule syntaxRule93 = syntaxRule42;
        new SyntaxPattern("\f\u0018<,\f\u0007\f\u000f\b\u0013\f\u001f\f'\b", new Object[0], 5);
        new SyntaxRule(syntaxPattern43, "\u0001\u0001\u0000\u0001\u0001", "\u0011\u0018\u0004\t\u0012\u0019\t\u0003\u001b\b#", new Object[]{Lit22}, 0);
        syntaxRuleArr112[2] = syntaxRule93;
        SyntaxRule[] syntaxRuleArr113 = syntaxRuleArr111;
        SyntaxRule[] syntaxRuleArr114 = syntaxRuleArr113;
        SyntaxRule[] syntaxRuleArr115 = syntaxRuleArr113;
        SyntaxRule syntaxRule94 = syntaxRule43;
        new SyntaxPattern("\f\u0018\f\b\f\u0007\f\u000f\b", new Object[0], 2);
        new SyntaxRule(syntaxPattern44, "\u0001\u0001", "\u0011\u0018\u0004\t\u0003\t\u0010\b\u000b", new Object[]{Lit24}, 0);
        syntaxRuleArr115[3] = syntaxRule94;
        new SyntaxRules(objArr99, syntaxRuleArr114, 6);
        Lit23 = syntaxRules32;
        SyntaxTemplate syntaxTemplate8 = syntaxTemplate3;
        Object[] objArr100 = new Object[3];
        objArr100[0] = Lit70;
        Object[] objArr101 = objArr100;
        objArr101[1] = Lit73;
        Object[] objArr102 = objArr101;
        objArr102[2] = Lit72;
        new SyntaxTemplate("\u0001\u0001\u0003", "\u0011\u0018\u00041\b\u0011\u0018\f\b\u000b\b\u0011\u0018\u0014\u0011\u0018\f\u0011\u0018\f\b\t\u0003\b\u0015\u0013", objArr102, 1);
        Lit21 = syntaxTemplate8;
        new SyntaxPattern("\f\u0007\f\u000f\r\u0017\u0010\b\b", new Object[0], 3);
        Lit20 = syntaxPattern45;
        new SyntaxTemplate("\u0001\u0001", "\u000b", new Object[0], 0);
        Lit19 = syntaxTemplate4;
        new SyntaxPattern("\f\u0007\f\u000f\b", new Object[0], 2);
        Lit18 = syntaxPattern46;
        new SyntaxPattern("\f\u0007\b", new Object[0], 1);
        Lit17 = syntaxPattern47;
        new SimpleSymbol("or");
        Lit16 = (SimpleSymbol) simpleSymbol49.readResolve();
        SyntaxTemplate syntaxTemplate9 = syntaxTemplate5;
        Object[] objArr103 = new Object[4];
        objArr103[0] = Lit70;
        Object[] objArr104 = objArr103;
        objArr104[1] = Lit73;
        Object[] objArr105 = objArr104;
        objArr105[2] = Lit72;
        Object[] objArr106 = objArr105;
        objArr106[3] = PairWithPosition.make(Lit73, LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 385052);
        new SyntaxTemplate("\u0001\u0001\u0003", "\u0011\u0018\u00041\b\u0011\u0018\f\b\u000b\b\u0011\u0018\u0014\u0011\u0018\f)\t\u0003\b\u0015\u0013\u0018\u001c", objArr106, 1);
        Lit15 = syntaxTemplate9;
        new SyntaxPattern("\f\u0007\f\u000f\r\u0017\u0010\b\b", new Object[0], 3);
        Lit14 = syntaxPattern48;
        new SyntaxTemplate("\u0001\u0001", "\u000b", new Object[0], 0);
        Lit13 = syntaxTemplate6;
        new SyntaxPattern("\f\u0007\f\u000f\b", new Object[0], 2);
        Lit12 = syntaxPattern49;
        new SyntaxPattern("\f\u0007\b", new Object[0], 1);
        Lit11 = syntaxPattern50;
        new SimpleSymbol("and");
        Lit10 = (SimpleSymbol) simpleSymbol50.readResolve();
        SyntaxRules syntaxRules33 = syntaxRules15;
        Object[] objArr107 = new Object[1];
        Object[] objArr108 = objArr107;
        Object[] objArr109 = objArr107;
        new SimpleSymbol("%case-match");
        SimpleSymbol simpleSymbol73 = (SimpleSymbol) simpleSymbol51.readResolve();
        Lit8 = simpleSymbol73;
        objArr109[0] = simpleSymbol73;
        SyntaxRule[] syntaxRuleArr116 = new SyntaxRule[2];
        SyntaxRule[] syntaxRuleArr117 = syntaxRuleArr116;
        SyntaxRule[] syntaxRuleArr118 = syntaxRuleArr116;
        SyntaxRule syntaxRule95 = syntaxRule44;
        SyntaxPattern syntaxPattern83 = syntaxPattern51;
        new SyntaxPattern("\f\u0018\f\u0007\f\u000f\b", new Object[0], 2);
        Object[] objArr110 = new Object[2];
        objArr110[0] = Lit74;
        Object[] objArr111 = objArr110;
        objArr111[1] = Lit66;
        new SyntaxRule(syntaxPattern83, "\u0001\u0001", "\u0011\u0018\u0004\t\u0003\b\u0011\u0018\f\b\u000b", objArr111, 0);
        syntaxRuleArr118[0] = syntaxRule95;
        SyntaxRule[] syntaxRuleArr119 = syntaxRuleArr117;
        SyntaxRule[] syntaxRuleArr120 = syntaxRuleArr119;
        SyntaxRule[] syntaxRuleArr121 = syntaxRuleArr119;
        SyntaxRule syntaxRule96 = syntaxRule45;
        SyntaxPattern syntaxPattern84 = syntaxPattern52;
        new SyntaxPattern("\f\u0018\f\u0007\f\u000f\r\u0017\u0010\b\b", new Object[0], 3);
        Object[] objArr112 = new Object[4];
        objArr112[0] = Lit16;
        Object[] objArr113 = objArr112;
        objArr113[1] = Lit74;
        Object[] objArr114 = objArr113;
        objArr114[2] = Lit66;
        Object[] objArr115 = objArr114;
        objArr115[3] = Lit8;
        new SyntaxRule(syntaxPattern84, "\u0001\u0001\u0003", "\u0011\u0018\u0004Y\u0011\u0018\f\t\u0003\b\u0011\u0018\u0014\b\u000b\b\u0011\u0018\u001c\t\u0003\b\u0015\u0013", objArr115, 1);
        syntaxRuleArr121[1] = syntaxRule96;
        new SyntaxRules(objArr108, syntaxRuleArr120, 3);
        Lit9 = syntaxRules33;
        SyntaxRules syntaxRules34 = syntaxRules16;
        Object[] objArr116 = new Object[2];
        Object[] objArr117 = objArr116;
        Object[] objArr118 = objArr116;
        new SimpleSymbol("%case");
        SimpleSymbol simpleSymbol74 = (SimpleSymbol) simpleSymbol52.readResolve();
        Lit6 = simpleSymbol74;
        objArr118[0] = simpleSymbol74;
        Object[] objArr119 = objArr117;
        Object[] objArr120 = objArr119;
        objArr119[1] = Lit75;
        SyntaxRule[] syntaxRuleArr122 = new SyntaxRule[4];
        SyntaxRule[] syntaxRuleArr123 = syntaxRuleArr122;
        SyntaxRule[] syntaxRuleArr124 = syntaxRuleArr122;
        SyntaxRule syntaxRule97 = syntaxRule46;
        SyntaxPattern syntaxPattern85 = syntaxPattern53;
        new SyntaxPattern("\f\u0018\f\u0007<\f\u0002\r\u000f\b\b\b\b", new Object[]{Lit75}, 2);
        new SyntaxRule(syntaxPattern85, "\u0001\u0003", "\u0011\u0018\u0004\b\r\u000b", new Object[]{Lit56}, 1);
        syntaxRuleArr124[0] = syntaxRule97;
        SyntaxRule[] syntaxRuleArr125 = syntaxRuleArr123;
        SyntaxRule[] syntaxRuleArr126 = syntaxRuleArr125;
        SyntaxRule[] syntaxRuleArr127 = syntaxRuleArr125;
        SyntaxRule syntaxRule98 = syntaxRule47;
        SyntaxPattern syntaxPattern86 = syntaxPattern54;
        new SyntaxPattern("\f\u0018\f\u0007<\f\u0002\r\u000f\b\b\b\u0013", new Object[]{Lit75}, 3);
        new SyntaxRule(syntaxPattern86, "\u0001\u0003\u0000", "\u0018\u0004", new Object[]{PairWithPosition.make(Lit69, PairWithPosition.make("junk following else (in case)", LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 241674), "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 237577)}, 0);
        syntaxRuleArr127[1] = syntaxRule98;
        SyntaxRule[] syntaxRuleArr128 = syntaxRuleArr126;
        SyntaxRule[] syntaxRuleArr129 = syntaxRuleArr128;
        SyntaxRule[] syntaxRuleArr130 = syntaxRuleArr128;
        SyntaxRule syntaxRule99 = syntaxRule48;
        SyntaxPattern syntaxPattern87 = syntaxPattern55;
        new SyntaxPattern("\f\u0018\f\u0007\\,\r\u000f\b\b\b\r\u0017\u0010\b\b\b", new Object[0], 3);
        Object[] objArr121 = new Object[3];
        objArr121[0] = Lit72;
        Object[] objArr122 = objArr121;
        objArr122[1] = Lit8;
        Object[] objArr123 = objArr122;
        objArr123[2] = Lit56;
        new SyntaxRule(syntaxPattern87, "\u0001\u0003\u0003", "\u0011\u0018\u0004A\u0011\u0018\f\t\u0003\b\r\u000b\b\u0011\u0018\u0014\b\u0015\u0013", objArr123, 1);
        syntaxRuleArr130[2] = syntaxRule99;
        SyntaxRule[] syntaxRuleArr131 = syntaxRuleArr129;
        SyntaxRule[] syntaxRuleArr132 = syntaxRuleArr131;
        SyntaxRule[] syntaxRuleArr133 = syntaxRuleArr131;
        SyntaxRule syntaxRule100 = syntaxRule49;
        SyntaxPattern syntaxPattern88 = syntaxPattern56;
        new SyntaxPattern("\f\u0018\f\u0007\\,\r\u000f\b\b\b\r\u0017\u0010\b\b\f\u001f\r' \b\b", new Object[0], 5);
        Object[] objArr124 = new Object[4];
        objArr124[0] = Lit72;
        Object[] objArr125 = objArr124;
        objArr125[1] = Lit8;
        Object[] objArr126 = objArr125;
        objArr126[2] = Lit56;
        Object[] objArr127 = objArr126;
        objArr127[3] = Lit6;
        new SyntaxRule(syntaxPattern88, "\u0001\u0003\u0003\u0001\u0003", "\u0011\u0018\u0004A\u0011\u0018\f\t\u0003\b\r\u000b1\u0011\u0018\u0014\b\u0015\u0013\b\u0011\u0018\u001c\t\u0003\t\u001b\b%#", objArr127, 1);
        syntaxRuleArr133[3] = syntaxRule100;
        new SyntaxRules(objArr120, syntaxRuleArr132, 5);
        Lit7 = syntaxRules34;
        SyntaxRules syntaxRules35 = syntaxRules17;
        Object[] objArr128 = new Object[1];
        Object[] objArr129 = objArr128;
        Object[] objArr130 = objArr128;
        new SimpleSymbol("case");
        SimpleSymbol simpleSymbol75 = (SimpleSymbol) simpleSymbol53.readResolve();
        Lit4 = simpleSymbol75;
        objArr130[0] = simpleSymbol75;
        SyntaxRule[] syntaxRuleArr134 = new SyntaxRule[1];
        SyntaxRule[] syntaxRuleArr135 = syntaxRuleArr134;
        SyntaxRule[] syntaxRuleArr136 = syntaxRuleArr134;
        SyntaxRule syntaxRule101 = syntaxRule50;
        SyntaxPattern syntaxPattern89 = syntaxPattern57;
        new SyntaxPattern("\f\u0018\f\u0007\r\u000f\b\b\b", new Object[0], 2);
        Object[] objArr131 = new Object[3];
        objArr131[0] = Lit70;
        Object[] objArr132 = objArr131;
        new SimpleSymbol("tmp");
        objArr132[1] = (SimpleSymbol) simpleSymbol54.readResolve();
        Object[] objArr133 = objArr132;
        objArr133[2] = Lit6;
        new SyntaxRule(syntaxPattern89, "\u0001\u0003", "\u0011\u0018\u00041\b\u0011\u0018\f\b\u0003\b\u0011\u0018\u0014\u0011\u0018\f\b\r\u000b", objArr133, 1);
        syntaxRuleArr136[0] = syntaxRule101;
        new SyntaxRules(objArr129, syntaxRuleArr135, 2);
        Lit5 = syntaxRules35;
        SyntaxRules syntaxRules36 = syntaxRules18;
        Object[] objArr134 = new Object[3];
        Object[] objArr135 = objArr134;
        Object[] objArr136 = objArr134;
        new SimpleSymbol("cond");
        SimpleSymbol simpleSymbol76 = (SimpleSymbol) simpleSymbol55.readResolve();
        Lit2 = simpleSymbol76;
        objArr136[0] = simpleSymbol76;
        Object[] objArr137 = objArr135;
        objArr137[1] = Lit75;
        Object[] objArr138 = objArr137;
        Object[] objArr139 = objArr138;
        objArr138[2] = Lit76;
        SyntaxRule[] syntaxRuleArr137 = new SyntaxRule[8];
        SyntaxRule[] syntaxRuleArr138 = syntaxRuleArr137;
        SyntaxRule[] syntaxRuleArr139 = syntaxRuleArr137;
        SyntaxRule syntaxRule102 = syntaxRule51;
        SyntaxPattern syntaxPattern90 = syntaxPattern58;
        new SyntaxPattern("\f\u0018L\f\u0002\f\u0007\r\u000f\b\b\b\b", new Object[]{Lit75}, 2);
        new SyntaxRule(syntaxPattern90, "\u0001\u0003", "\u0011\u0018\u0004\t\u0003\b\r\u000b", new Object[]{Lit56}, 1);
        syntaxRuleArr139[0] = syntaxRule102;
        SyntaxRule[] syntaxRuleArr140 = syntaxRuleArr138;
        SyntaxRule[] syntaxRuleArr141 = syntaxRuleArr140;
        SyntaxRule[] syntaxRuleArr142 = syntaxRuleArr140;
        SyntaxRule syntaxRule103 = syntaxRule52;
        SyntaxPattern syntaxPattern91 = syntaxPattern59;
        new SyntaxPattern("\f\u0018L\f\u0002\f\u0007\r\u000f\b\b\b\r\u0017\u0010\b\b", new Object[]{Lit75}, 3);
        new SyntaxRule(syntaxPattern91, "\u0001\u0003\u0003", "\u0018\u0004", new Object[]{PairWithPosition.make(Lit69, PairWithPosition.make("else clause must be last clause of cond", LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 86035), "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 86020)}, 0);
        syntaxRuleArr142[1] = syntaxRule103;
        SyntaxRule[] syntaxRuleArr143 = syntaxRuleArr141;
        SyntaxRule[] syntaxRuleArr144 = syntaxRuleArr143;
        SyntaxRule[] syntaxRuleArr145 = syntaxRuleArr143;
        SyntaxRule syntaxRule104 = syntaxRule53;
        SyntaxPattern syntaxPattern92 = syntaxPattern60;
        new SyntaxPattern("\f\u0018<\f\u0007\f\u0002\f\u000f\b\b", new Object[]{Lit76}, 2);
        Object[] objArr140 = new Object[4];
        objArr140[0] = Lit70;
        Object[] objArr141 = objArr140;
        objArr141[1] = Lit77;
        Object[] objArr142 = objArr141;
        objArr142[2] = Lit72;
        Object[] objArr143 = objArr142;
        objArr143[3] = PairWithPosition.make(Lit77, LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 102423);
        new SyntaxRule(syntaxPattern92, "\u0001\u0001", "\u0011\u0018\u00041\b\u0011\u0018\f\b\u0003\b\u0011\u0018\u0014\u0011\u0018\f\b\t\u000b\u0018\u001c", objArr143, 0);
        syntaxRuleArr145[2] = syntaxRule104;
        SyntaxRule[] syntaxRuleArr146 = syntaxRuleArr144;
        SyntaxRule[] syntaxRuleArr147 = syntaxRuleArr146;
        SyntaxRule[] syntaxRuleArr148 = syntaxRuleArr146;
        SyntaxRule syntaxRule105 = syntaxRule54;
        SyntaxPattern syntaxPattern93 = syntaxPattern61;
        new SyntaxPattern("\f\u0018<\f\u0007\f\u0002\f\u000f\b\f\u0017\r\u001f\u0018\b\b", new Object[]{Lit76}, 4);
        Object[] objArr144 = new Object[5];
        objArr144[0] = Lit70;
        Object[] objArr145 = objArr144;
        objArr145[1] = Lit77;
        Object[] objArr146 = objArr145;
        objArr146[2] = Lit72;
        Object[] objArr147 = objArr146;
        objArr147[3] = PairWithPosition.make(Lit77, LList.Empty, "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm", 122898);
        Object[] objArr148 = objArr147;
        objArr148[4] = Lit2;
        new SyntaxRule(syntaxPattern93, "\u0001\u0001\u0001\u0003", "\u0011\u0018\u00041\b\u0011\u0018\f\b\u0003\b\u0011\u0018\u0014\u0011\u0018\f!\t\u000b\u0018\u001c\b\u0011\u0018$\t\u0013\b\u001d\u001b", objArr148, 1);
        syntaxRuleArr148[3] = syntaxRule105;
        SyntaxRule[] syntaxRuleArr149 = syntaxRuleArr147;
        new SyntaxPattern("\f\u0018\u001c\f\u0007\b\b", new Object[0], 1);
        new SyntaxRule(syntaxPattern62, "\u0001", "\u0003", new Object[0], 0);
        syntaxRuleArr149[4] = syntaxRule55;
        SyntaxRule[] syntaxRuleArr150 = syntaxRuleArr149;
        SyntaxRule[] syntaxRuleArr151 = syntaxRuleArr150;
        SyntaxRule[] syntaxRuleArr152 = syntaxRuleArr150;
        SyntaxRule syntaxRule106 = syntaxRule56;
        SyntaxPattern syntaxPattern94 = syntaxPattern63;
        new SyntaxPattern("\f\u0018\u001c\f\u0007\b\f\u000f\r\u0017\u0010\b\b", new Object[0], 3);
        Object[] objArr149 = new Object[2];
        objArr149[0] = Lit16;
        Object[] objArr150 = objArr149;
        objArr150[1] = Lit2;
        new SyntaxRule(syntaxPattern94, "\u0001\u0001\u0003", "\u0011\u0018\u0004\t\u0003\b\u0011\u0018\f\t\u000b\b\u0015\u0013", objArr150, 1);
        syntaxRuleArr152[5] = syntaxRule106;
        SyntaxRule[] syntaxRuleArr153 = syntaxRuleArr151;
        SyntaxRule[] syntaxRuleArr154 = syntaxRuleArr153;
        SyntaxRule[] syntaxRuleArr155 = syntaxRuleArr153;
        SyntaxRule syntaxRule107 = syntaxRule57;
        SyntaxPattern syntaxPattern95 = syntaxPattern64;
        new SyntaxPattern("\f\u0018L\f\u0007\f\u000f\r\u0017\u0010\b\b\b", new Object[0], 3);
        Object[] objArr151 = new Object[2];
        objArr151[0] = Lit72;
        Object[] objArr152 = objArr151;
        objArr152[1] = Lit56;
        new SyntaxRule(syntaxPattern95, "\u0001\u0001\u0003", "\u0011\u0018\u0004\t\u0003\b\u0011\u0018\f\t\u000b\b\u0015\u0013", objArr152, 1);
        syntaxRuleArr155[6] = syntaxRule107;
        SyntaxRule[] syntaxRuleArr156 = syntaxRuleArr154;
        SyntaxRule[] syntaxRuleArr157 = syntaxRuleArr156;
        SyntaxRule[] syntaxRuleArr158 = syntaxRuleArr156;
        SyntaxRule syntaxRule108 = syntaxRule58;
        SyntaxPattern syntaxPattern96 = syntaxPattern65;
        new SyntaxPattern("\f\u0018L\f\u0007\f\u000f\r\u0017\u0010\b\b\f\u001f\r' \b\b", new Object[0], 5);
        Object[] objArr153 = new Object[3];
        objArr153[0] = Lit72;
        Object[] objArr154 = objArr153;
        objArr154[1] = Lit56;
        Object[] objArr155 = objArr154;
        objArr155[2] = Lit2;
        new SyntaxRule(syntaxPattern96, "\u0001\u0001\u0003\u0001\u0003", "\u0011\u0018\u0004\t\u0003A\u0011\u0018\f\t\u000b\b\u0015\u0013\b\u0011\u0018\u0014\t\u001b\b%#", objArr155, 1);
        syntaxRuleArr158[7] = syntaxRule108;
        new SyntaxRules(objArr139, syntaxRuleArr157, 5);
        Lit3 = syntaxRules36;
        new std_syntax();
        $instance = std_syntax;
        std_syntax std_syntax2 = $instance;
        new ModuleMethod(std_syntax2, 1, (Object) null, FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
        and = Macro.make(Lit10, procedure, $instance);
        new ModuleMethod(std_syntax2, 2, (Object) null, FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
        f273or = Macro.make(Lit16, procedure2, $instance);
        new ModuleMethod(std_syntax2, 3, Lit46, FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
        syntax$Mnobject$Mn$Grdatum = moduleMethod;
        new ModuleMethod(std_syntax2, 4, Lit47, 8194);
        datum$Mn$Grsyntax$Mnobject = moduleMethod2;
        new ModuleMethod(std_syntax2, 5, Lit48, FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
        generate$Mntemporaries = moduleMethod3;
        new ModuleMethod(std_syntax2, 6, Lit49, FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
        identifier$Qu = moduleMethod4;
        new ModuleMethod(std_syntax2, 7, Lit50, 8194);
        free$Mnidentifier$Eq$Qu = moduleMethod5;
        new ModuleMethod(std_syntax2, 8, Lit51, FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
        syntax$Mnsource = moduleMethod6;
        new ModuleMethod(std_syntax2, 9, Lit52, FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
        syntax$Mnline = moduleMethod7;
        new ModuleMethod(std_syntax2, 10, Lit53, FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
        syntax$Mncolumn = moduleMethod8;
        SimpleSymbol simpleSymbol77 = Lit54;
        new ModuleMethod(std_syntax2, 11, (Object) null, FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
        Procedure procedure4 = procedure3;
        procedure4.setProperty("source-location", "/u2/home/jis/ai2-kawa/kawa/lib/std_syntax.scm:298");
        begin$Mnfor$Mnsyntax = Macro.make(simpleSymbol77, procedure4, $instance);
        $instance.run();
    }

    public std_syntax() {
        ModuleInfo.register(this);
    }

    public final void run(CallContext $ctx) {
        Consumer consumer = $ctx.consumer;
    }

    static Object lambda1(Object obj) {
        Object f;
        Object obj2;
        Object f2 = obj;
        Object[] allocVars = SyntaxPattern.allocVars(3, (Object[]) null);
        Object obj3 = f2;
        if (Lit11.match(f2, allocVars, 0)) {
            f = obj2;
            new QuoteExp(Language.getDefaultLanguage().booleanObject(true));
        } else if (Lit12.match(f2, allocVars, 0)) {
            f = Lit13.execute(allocVars, TemplateScope.make());
        } else if (Lit14.match(f2, allocVars, 0)) {
            f = Lit15.execute(allocVars, TemplateScope.make());
        } else {
            f = syntax_case.error("syntax-case", f2);
        }
        return f;
    }

    static Object lambda2(Object obj) {
        Object f;
        Object obj2;
        Object f2 = obj;
        Object[] allocVars = SyntaxPattern.allocVars(3, (Object[]) null);
        Object obj3 = f2;
        if (Lit17.match(f2, allocVars, 0)) {
            f = obj2;
            new QuoteExp(Language.getDefaultLanguage().booleanObject(false));
        } else if (Lit18.match(f2, allocVars, 0)) {
            f = Lit19.execute(allocVars, TemplateScope.make());
        } else if (Lit20.match(f2, allocVars, 0)) {
            f = Lit21.execute(allocVars, TemplateScope.make());
        } else {
            f = syntax_case.error("syntax-case", f2);
        }
        return f;
    }

    public static Object syntaxObject$To$Datum(Object obj) {
        return Quote.quote(obj);
    }

    public int match1(ModuleMethod moduleMethod, Object obj, CallContext callContext) {
        ModuleMethod moduleMethod2 = moduleMethod;
        Object obj2 = obj;
        CallContext callContext2 = callContext;
        switch (moduleMethod2.selector) {
            case 1:
                callContext2.value1 = obj2;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 1;
                return 0;
            case 2:
                callContext2.value1 = obj2;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 1;
                return 0;
            case 3:
                callContext2.value1 = obj2;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 1;
                return 0;
            case 5:
                callContext2.value1 = obj2;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 1;
                return 0;
            case 6:
                callContext2.value1 = obj2;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 1;
                return 0;
            case 8:
                callContext2.value1 = obj2;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 1;
                return 0;
            case 9:
                callContext2.value1 = obj2;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 1;
                return 0;
            case 10:
                callContext2.value1 = obj2;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 1;
                return 0;
            case 11:
                callContext2.value1 = obj2;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 1;
                return 0;
            default:
                return super.match1(moduleMethod2, obj2, callContext2);
        }
    }

    public static Object datum$To$SyntaxObject(Object template$Mnidentifier, Object obj) {
        return SyntaxForms.makeWithTemplate(template$Mnidentifier, obj);
    }

    public int match2(ModuleMethod moduleMethod, Object obj, Object obj2, CallContext callContext) {
        ModuleMethod moduleMethod2 = moduleMethod;
        Object obj3 = obj;
        Object obj4 = obj2;
        CallContext callContext2 = callContext;
        switch (moduleMethod2.selector) {
            case 4:
                callContext2.value1 = obj3;
                callContext2.value2 = obj4;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 2;
                return 0;
            case 7:
                callContext2.value1 = obj3;
                callContext2.value2 = obj4;
                callContext2.proc = moduleMethod2;
                callContext2.f239pc = 2;
                return 0;
            default:
                return super.match2(moduleMethod2, obj3, obj4, callContext2);
        }
    }

    public static Object generateTemporaries(Object obj) {
        Object obj2;
        Object list = obj;
        Object valueOf = Integer.valueOf(Translator.listLength(list));
        Object obj3 = LList.Empty;
        while (true) {
            Object list2 = obj3;
            Object obj4 = valueOf;
            if (Scheme.numEqu.apply2(obj4, Lit0) != Boolean.FALSE) {
                return list2;
            }
            valueOf = AddOp.$Mn.apply2(obj4, Lit1);
            obj3 = obj2;
            new Pair(datum$To$SyntaxObject(list, Symbols.gentemp()), list2);
        }
    }

    public static boolean isIdentifier(Object obj) {
        boolean z;
        Throwable th;
        Object form = obj;
        boolean x = form instanceof Symbol;
        if (x) {
            z = x;
        } else {
            boolean x2 = form instanceof SyntaxForm;
            if (x2) {
                Object obj2 = form;
                Object obj3 = obj2;
                try {
                    z = SyntaxForms.isIdentifier((SyntaxForm) obj2);
                } catch (ClassCastException e) {
                    ClassCastException classCastException = e;
                    Throwable th2 = th;
                    new WrongType(classCastException, "kawa.lang.SyntaxForms.isIdentifier(kawa.lang.SyntaxForm)", 1, obj3);
                    throw th2;
                }
            } else {
                z = x2;
            }
        }
        return z;
    }

    public static boolean isFreeIdentifier$Eq(Object id1, Object id2) {
        Throwable th;
        Throwable th2;
        Object obj = id1;
        Object obj2 = obj;
        try {
            SyntaxForm syntaxForm = (SyntaxForm) obj;
            Object obj3 = id2;
            Object obj4 = obj3;
            try {
                return SyntaxForms.freeIdentifierEquals(syntaxForm, (SyntaxForm) obj3);
            } catch (ClassCastException e) {
                ClassCastException classCastException = e;
                Throwable th3 = th2;
                new WrongType(classCastException, "kawa.lang.SyntaxForms.freeIdentifierEquals(kawa.lang.SyntaxForm,kawa.lang.SyntaxForm)", 2, obj4);
                throw th3;
            }
        } catch (ClassCastException e2) {
            ClassCastException classCastException2 = e2;
            Throwable th4 = th;
            new WrongType(classCastException2, "kawa.lang.SyntaxForms.freeIdentifierEquals(kawa.lang.SyntaxForm,kawa.lang.SyntaxForm)", 1, obj2);
            throw th4;
        }
    }

    public Object apply2(ModuleMethod moduleMethod, Object obj, Object obj2) {
        ModuleMethod moduleMethod2 = moduleMethod;
        Object obj3 = obj;
        Object obj4 = obj2;
        switch (moduleMethod2.selector) {
            case 4:
                return datum$To$SyntaxObject(obj3, obj4);
            case 7:
                return isFreeIdentifier$Eq(obj3, obj4) ? Boolean.TRUE : Boolean.FALSE;
            default:
                return super.apply2(moduleMethod2, obj3, obj4);
        }
    }

    public static Object syntaxSource(Object obj) {
        Object form;
        Object form2 = obj;
        if (form2 instanceof SyntaxForm) {
            form = syntaxSource(((SyntaxForm) form2).getDatum());
        } else if (form2 instanceof PairWithPosition) {
            String str = ((PairWithPosition) form2).getFileName();
            form = str == null ? Boolean.FALSE : str;
        } else {
            form = Boolean.FALSE;
        }
        return form;
    }

    public static Object syntaxLine(Object obj) {
        Object form;
        Object form2 = obj;
        if (form2 instanceof SyntaxForm) {
            form = syntaxLine(((SyntaxForm) form2).getDatum());
        } else {
            form = form2 instanceof PairWithPosition ? Integer.valueOf(((PairWithPosition) form2).getLineNumber()) : Boolean.FALSE;
        }
        return form;
    }

    public static Object syntaxColumn(Object obj) {
        Object form;
        Object form2 = obj;
        if (form2 instanceof SyntaxForm) {
            form = syntaxLine(((SyntaxForm) form2).getDatum());
        } else {
            form = form2 instanceof PairWithPosition ? Integer.valueOf(((PairWithPosition) form2).getColumnNumber() + 0) : Boolean.FALSE;
        }
        return form;
    }

    static Object lambda3(Object obj) {
        Object form;
        Object obj2;
        Object form2 = obj;
        Object[] allocVars = SyntaxPattern.allocVars(2, (Object[]) null);
        Object obj3 = form2;
        if (Lit55.match(form2, allocVars, 0)) {
            Eval eval = Eval.eval;
            new Pair(Lit56, Lit57.execute(allocVars, TemplateScope.make()));
            if (eval.apply1(syntaxObject$To$Datum(obj2)) != Boolean.FALSE) {
                form = Lit58.execute(allocVars, TemplateScope.make());
                return form;
            }
        }
        form = syntax_case.error("syntax-case", form2);
        return form;
    }

    public Object apply1(ModuleMethod moduleMethod, Object obj) {
        ModuleMethod moduleMethod2 = moduleMethod;
        Object obj2 = obj;
        switch (moduleMethod2.selector) {
            case 1:
                return lambda1(obj2);
            case 2:
                return lambda2(obj2);
            case 3:
                return syntaxObject$To$Datum(obj2);
            case 5:
                return generateTemporaries(obj2);
            case 6:
                return isIdentifier(obj2) ? Boolean.TRUE : Boolean.FALSE;
            case 8:
                return syntaxSource(obj2);
            case 9:
                return syntaxLine(obj2);
            case 10:
                return syntaxColumn(obj2);
            case 11:
                return lambda3(obj2);
            default:
                return super.apply1(moduleMethod2, obj2);
        }
    }
}
